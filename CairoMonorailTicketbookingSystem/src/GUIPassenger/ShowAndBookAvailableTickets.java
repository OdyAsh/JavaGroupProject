/*
 *  Group 9
 *  Author: Amro Sherif 201762
 */
package GUIPassenger;
import Person.*;
import java.util.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import Station.*;
import javax.swing.DefaultListModel;

public class ShowAndBookAvailableTickets extends javax.swing.JFrame {

    private DefaultListModel availableTicketsModel;
    private DefaultListModel selectedTicketsModel;
    private ArrayList<Integer>passengerSelectedTickets;
    private Passenger currentPassenger;
    private int trainIndex;
    private int timeSlot;
    private int flg;
    private int oldSeatNumber;
    
    public ShowAndBookAvailableTickets(int trainIndex, Passenger currentPassenger, int timeSlot, int flg) {
        initComponents();
    
        availableTicketsModel = new DefaultListModel();
        selectedTicketsModel = new DefaultListModel();
        this.passengerSelectedTickets = new ArrayList<Integer>();
        this.currentPassenger = currentPassenger;
        this.trainIndex = trainIndex;
        this.timeSlot = timeSlot;
        this.flg = flg;
        oldSeatNumber = 0;
        if(flg == 2){
            header4.setVisible(false);
            selectedTicketsList.setVisible(false);
            addButton.setVisible(false);
        }
        
        ArrayList<String>availableTickets = currentPassenger.showAvailableTickets(trainIndex, timeSlot);
        for(int i = 0; i < availableTickets.size(); ++i){
            availableTicketsModel.addElement(availableTickets.get(i));
        }
        availableTicketsList.setModel(availableTicketsModel);
    }

    public ShowAndBookAvailableTickets(int trainIndex, Passenger currentPassenger, int timeSlot, int flg,int oldSeatNumber) {
        initComponents();
    
        this.passengerSelectedTickets = new ArrayList<Integer>();
        availableTicketsModel = new DefaultListModel();
        this.currentPassenger = currentPassenger;
        this.trainIndex = trainIndex;
        this.timeSlot = timeSlot;
        this.flg = flg;
        this.oldSeatNumber = oldSeatNumber;
        
        if(flg == 2){
            header4.setVisible(false);
            selectedTicketsList.setVisible(false);
            addButton.setVisible(false);
        }
        
        ArrayList<String>availableTickets = currentPassenger.showAvailableTickets(trainIndex, timeSlot);
        for(int i = 0; i < availableTickets.size(); ++i){
            availableTicketsModel.addElement(availableTickets.get(i));
        }
        availableTicketsList.setModel(availableTicketsModel);
    }
    
    private ShowAndBookAvailableTickets() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header1 = new javax.swing.JLabel();
        header2 = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableTicketsList = new javax.swing.JList<>();
        header3 = new javax.swing.JLabel();
        enterSeatNumInput = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        header4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedTicketsList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        header1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        header1.setText("Cairo Monorail Ticket booking System");

        header2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        header2.setText("These are the available tickets");

        submitButton.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        previousButton.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        previousButton.setText("Previous");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(availableTicketsList);

        header3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        header3.setText("Enter the seat number you want to book");

        addButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        header4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        header4.setText("Selected tickets");

        jScrollPane2.setViewportView(selectedTicketsList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(234, 234, 234)
                                .addComponent(header2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(267, 267, 267)
                                .addComponent(submitButton)
                                .addGap(18, 18, 18)
                                .addComponent(previousButton)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(header1)
                .addGap(199, 199, 199))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(header4, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(header3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addGap(129, 129, 129))
                    .addComponent(enterSeatNumInput))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(header1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(header2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(header4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(header3)
                        .addGap(18, 18, 18)
                        .addComponent(enterSeatNumInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(previousButton))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        //The flag is used to determine if the user is booking tickets or just updating an existing ticket
        //1 for booking
        //2 for updating
        if(flg == 1){
            for(int i : passengerSelectedTickets){
                currentPassenger.bookTicket(trainIndex, i,timeSlot);
            }
            
            try{
                Station.setTrainsList(Station.getTrainsList());
                Station.setPassengersList(Station.getPassengersList());
                JOptionPane.showMessageDialog(null, "Booking is done successfully\n");
                this.dispose();
                new HomePassenger(currentPassenger).setVisible(true);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Cannot access the file to retrieve the data");
            }

        }
        else{
            int newSeatNumber = Integer.valueOf(enterSeatNumInput.getText());
            System.out.println("train: "+trainIndex);
            currentPassenger.bookTicket(trainIndex, newSeatNumber,timeSlot);
            System.out.println("HYYYYYY");
            int trainId = Station.getTrainsList().get(trainIndex).getId();
            currentPassenger.updateSeatNumber(trainIndex, trainId, timeSlot, oldSeatNumber);
            System.out.println("BYYYY");
            try{
                Station.setTrainsList(Station.getTrainsList());
                Station.setPassengersList(Station.getPassengersList());
                JOptionPane.showMessageDialog(null, "Updating is done successfully\n");
                this.dispose();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Cannot access the file to retrieve the data");
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        Integer value = Integer.valueOf(enterSeatNumInput.getText());
        passengerSelectedTickets.add(value);
        
        //At every time the passenger adds a seat number, it is added to the passengerSelectedTickets array list
        //and then the selectedTicketsList is assigned to the this array list to show the passenger his current added tickets. 
        selectedTicketsModel.addElement(value.toString());
        selectedTicketsList.setModel(selectedTicketsModel);
    }//GEN-LAST:event_addButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        this.dispose();
        new BookTicket(currentPassenger).setVisible(true);
    }//GEN-LAST:event_previousButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowAndBookAvailableTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowAndBookAvailableTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowAndBookAvailableTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowAndBookAvailableTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowAndBookAvailableTickets().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JList<String> availableTicketsList;
    private javax.swing.JTextField enterSeatNumInput;
    private javax.swing.JLabel header1;
    private javax.swing.JLabel header2;
    private javax.swing.JLabel header3;
    private javax.swing.JLabel header4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton previousButton;
    private javax.swing.JList<String> selectedTicketsList;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
